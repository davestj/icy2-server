# ICY2-SERVER .gitignore
# I created this gitignore to exclude build artifacts, temporary files, and generated content
# This ensures our repository only tracks source code and essential configuration files

# Compiled Object Files and Libraries
# These are generated during compilation and can be recreated from source code
*.o
*.lo
*.la
*.a
*.so
*.so.*
*.dylib
*.dll
*.exe

# Build System Generated Files
# Autotools generates these files from our configure.ac and Makefile.am templates
configure
config.h
config.h.in
config.status
config.log
config.cache
stamp-h1
Makefile
Makefile.in
*/Makefile
*/Makefile.in

# Libtool Generated Files
# These are created when we use LT_INIT in our configure.ac
libtool
ltmain.sh
.libs/
.deps/

# Autotools Cache and Temporary Files
# These contain cached autotools macro expansions and temporary data
autom4te.cache/
aclocal.m4
install-sh
missing
depcomp
compile
config.guess
config.sub

# Build Directories and Artifacts
# These directories contain intermediate build products
build/
.build/
debug/
release/
obj/

# IDE and Editor Files
# These are specific to development environments and shouldn't be shared
.vscode/
.idea/
*.swp
*.swo
*~
.#*
#*#
*.tmp
*.temp

# Mac OS Generated Files
# These are created by macOS and don't belong in the repository
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Log Files and Runtime Data
# These are generated during execution and testing
*.log
logs/
*.pid
*.seed
*.coverage
*.lcov

# SSL Certificates and Keys
# These contain sensitive security information and are often auto-generated
ssl/*.crt
ssl/*.key
ssl/*.pem
ssl/*.p12
ssl/*.pfx
ssl/selfsigned.*
ssl/other-ss-*

# Configuration Override Files
# These might contain local development settings that shouldn't be shared
config/local.yaml
config/*-local.yaml
config/development.yaml
config/production.yaml
.env
.env.local
.env.development
.env.production

# Package Manager Files (if using any)
# These are dependency management artifacts
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Testing and Coverage Files
# These are generated during testing and can be recreated
coverage/
*.gcov
*.gcda
*.gcno
test-results/
gtest_output.xml

# Static Analysis and Documentation Generated Files
# These are created by development tools and can be regenerated
docs/html/
docs/latex/
doxygen_warnings.log
cppcheck-results.xml
valgrind-output.log

# Backup Files
# These are created by editors and backup tools
*.backup
*.bak
*.orig
*.rej
*~

# Distribution and Packaging Files
# These are created during the packaging process
*.tar.gz
*.tar.bz2
*.tar.xz
*.zip
*.deb
*.rpm
dist/
packages/

# Core Dumps and Debug Files
# These are created when programs crash or during debugging
core
core.*
vgcore.*
*.core
*.stackdump

# Temporary and Cache Directories
# These contain temporary data that can be safely recreated
tmp/
temp/
cache/
.cache/

# Language Server and Intellisense Files
# These are created by modern development tools for code analysis
.ccls-cache/
.clangd/
compile_commands.json

# CMake Files (in case CMake is used alongside autotools)
# These would be generated if CMake build system is used
CMakeCache.txt
CMakeFiles/
cmake_install.cmake
CMakeLists.txt.user

# Visual Studio Code Specific Files
# These contain local development environment settings
.vscode/settings.json
.vscode/tasks.json
.vscode/launch.json
.vscode/extensions.json

# Local Development Override Files
# These allow developers to customize their local environment
local.mk
local.conf
override.conf

# Generated Documentation Files
# These are created by documentation generation tools
man/
*.1
*.3
*.8

# Profiling and Performance Analysis Files
# These are created during performance testing
*.prof
*.perf
perf.data*
callgrind.out.*

# Keep Important Files That Should Be Tracked
# Using negative patterns to ensure these are always included even if they match other patterns
!.gitignore
!.github/
!README.md
!LICENSE.md
!bootstrap.sh
!autogen.sh
!configure.ac
!Makefile.am
!config/mcaster1.yaml

!config.h.in
